{"ast":null,"code":"// import MineClearing from './components/Index.vue'\n\nconst posArr = [[-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1]];\nexport default {\n  name: 'App',\n  components: {\n    // MineClearing\n  },\n  data() {\n    return {\n      /**\n       * @description 每一局游戏第一次点击格子\n       */\n      posArr,\n      isGameOver: false,\n      /**\n       * @description 每一局游戏第一次点击格子\n       */\n      isFirstClick: true,\n      /**\n       * @description 格子数组\n       */\n      minesArray: [],\n      /**\n       * @description 行数\n       */\n      rowSize: 8,\n      /**\n       * @description 列数\n       */\n      colSize: 8,\n      /**\n       * @description 地雷数量\n       */\n      mineSize: 9,\n      /**\n       * @description 表情包\n       */\n      btnContent: 'emoji-smile'\n    };\n  },\n  created() {\n    // 定义扫雷游戏难度 默认为普通\n    console.log('111', this);\n  },\n  watch: {},\n  mounted() {\n    // 初始化游戏\n    console.log('-----------------------');\n    console.log('初始化游戏中...');\n    this.minesArray = [];\n    for (let row = 0; row < this.rowSize; row++) {\n      this.minesArray[row] = [];\n      for (let col = 0; col < this.colSize; col++) {\n        this.minesArray[row][col] = 0;\n      }\n    }\n    console.log('游戏初始化完成');\n    console.log('-----------------------');\n  },\n  methods: {\n    restart() {\n      console.log('重新开始');\n    },\n    /**\n     * @description 第一次点击格子\n     * @param row\n     * @param col\n     */\n    clickCell(row, col) {\n      const that = this;\n      console.log('that123123', that);\n      if (this.isFirstClick) {\n        this.initMines(row, col, that);\n      }\n    },\n    /**\n     * @description  传入第一次点击的坐标\n     * @param row\n     * @param col\n     * @param that\n     */\n    initMines(row, col, that) {\n      console.log('-----------------------');\n      console.log('初始化地雷...');\n      console.log('that', that);\n\n      // 地雷设为 -1\n      for (let i = 0; i < this.mineSize; i++) {\n        do {\n          // 生成行/列随机数 ,变量提升\n\n          /**\n           * @des 雷X坐标\n           * @type {number}\n           */\n          var mineRow = Math.floor(Math.random() * this.rowSize);\n          /**\n           * @des 雷Y坐标\n           * @type {number}\n           */\n          var mineCol = Math.floor(Math.random() * this.colSize);\n        } while (\n        //  防止与第一次点击坐标重复\n        mineRow === row && mineCol === col ||\n        //  防止地雷坐标重复\n        this.minesArray[mineRow][mineCol] === -1);\n        console.log('点击地雷随机生成的坐标', mineRow, ',', mineCol);\n        this.minesArray[mineRow][mineCol] = -1;\n        console.log('vm', that);\n        that.$set(this.minesArray, mineRow, [...this.minesArray[mineRow]]);\n      }\n      // 初始化数字\n      this.initNum();\n      console.log('初始化地雷完成...');\n      console.log('-----------------------');\n      this.isFirstClick = false;\n    },\n    /**\n     * @description 初始化数字\n     */\n    initNum() {\n      console.log('初始化数字...');\n      console.log('x', this.minesArray.length);\n      console.log('y', this.minesArray[0].length);\n\n      /**\n       * @description X长度\n       * @type {number}\n       */\n      const borderX = this.minesArray.length;\n\n      /**\n       * @description Y长度\n       * @type {number}\n       */\n      const borderY = this.minesArray[0].length;\n      for (let row = 0; row < this.minesArray.length; row++) {\n        for (let col = 0; col < this.minesArray[row].length; col++) {\n          // 如果是雷，雷周围 8 个格子除了地雷数字加 1\n          if (this.minesArray[row][col] === -1) {\n            posArr.forEach(pos => {\n              console.log('pos', pos);\n              const x = pos[0] + row;\n              const y = pos[1] + col;\n              if (x < borderX && x >= 0 && y < borderY && y >= 0) {\n                if (this.minesArray[x][y] !== -1) {\n                  this.minesArray[x][y]++;\n                }\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAgBA;;AAEA,gBACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA;AACA;EACAA;EACAC;IACA;EAAA,CACA;EACAC;IACA;MAEA;AACA;AACA;MACAC;MACAC;MAEA;AACA;AACA;MACAC;MAEA;AACA;AACA;MACAC;MAEA;AACA;AACA;MACAC;MAEA;AACA;AACA;MACAC;MAEA;AACA;AACA;MACAC;MAEA;AACA;AACA;MACAC;IAEA;EACA;EACAC;IACA;IACAC;EACA;EACAC;EACAC;IACA;IACAF;IACAA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;IAEAA;IACAA;EACA;EACAG;IACAC;MACAJ;IACA;IAEA;AACA;AACA;AACA;AACA;IACAK;MACA;MACAL;MACA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAM;MACAN;MACAA;MACAA;;MAEA;MACA;QACA;UACA;;UAEA;AACA;AACA;AACA;UACA;UACA;AACA;AACA;AACA;UACA;QACA;QACA;QACAO;QACA;QACA;QAEAP;QACA;QACAA;QACAQ;MACA;MACA;MACA;MAEAR;MACAA;MAEA;IACA;IAEA;AACA;AACA;IACAS;MACAT;MAEAA;MACAA;;MAEA;AACA;AACA;AACA;MACA;;MAEA;AACA;AACA;AACA;MACA;MAEA;QACA;UACA;UACA;YACAT;cACAS;cACA;cACA;cACA;gBACA;kBACA;gBACA;cACA;YACA;UACA;QACA;MACA;IACA;EAEA;AAEA","names":["name","components","data","posArr","isGameOver","isFirstClick","minesArray","rowSize","colSize","mineSize","btnContent","created","console","watch","mounted","methods","restart","clickCell","initMines","mineRow","that","initNum"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"main-area\">\n      <button @click=\"restart\">{{ btnContent }}</button>\n      <div class=\"game-area\">\n        <div v-for=\"(row,m) in minesArray\" :key=\"m\" class=\"row-cells\">\n          <div v-for=\"(cell,n) in row\" :key=\"n\" class=\"cell\" @click=\"clickCell(m,n)\">\n            {{ cell }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import MineClearing from './components/Index.vue'\n\nconst posArr = [\n  [-1, -1],\n  [-1, 0],\n  [-1, 1],\n  [0, 1],\n  [1, 1],\n  [1, 0],\n  [1, -1],\n  [0, -1]\n]\nexport default {\n  name: 'App',\n  components: {\n    // MineClearing\n  },\n  data () {\n    return {\n\n      /**\n       * @description 每一局游戏第一次点击格子\n       */\n      posArr,\n      isGameOver: false,\n\n      /**\n       * @description 每一局游戏第一次点击格子\n       */\n      isFirstClick: true,\n\n      /**\n       * @description 格子数组\n       */\n      minesArray: [],\n\n      /**\n       * @description 行数\n       */\n      rowSize: 8,\n\n      /**\n       * @description 列数\n       */\n      colSize: 8,\n\n      /**\n       * @description 地雷数量\n       */\n      mineSize: 9,\n\n      /**\n       * @description 表情包\n       */\n      btnContent: 'emoji-smile'\n\n    }\n  },\n  created () {\n    // 定义扫雷游戏难度 默认为普通\n    console.log('111', this)\n  },\n  watch: {},\n  mounted () {\n    // 初始化游戏\n    console.log('-----------------------')\n    console.log('初始化游戏中...')\n    this.minesArray = []\n    for (let row = 0; row < this.rowSize; row++) {\n      this.minesArray[row] = []\n      for (let col = 0; col < this.colSize; col++) {\n        this.minesArray[row][col] = 0\n      }\n    }\n\n    console.log('游戏初始化完成')\n    console.log('-----------------------')\n  },\n  methods: {\n    restart () {\n      console.log('重新开始')\n    },\n\n    /**\n     * @description 第一次点击格子\n     * @param row\n     * @param col\n     */\n    clickCell (row, col) {\n      const that = this\n      console.log('that123123', that)\n      if (this.isFirstClick) {\n        this.initMines(row, col, that)\n      }\n    },\n\n    /**\n     * @description  传入第一次点击的坐标\n     * @param row\n     * @param col\n     * @param that\n     */\n    initMines (row, col, that) {\n      console.log('-----------------------')\n      console.log('初始化地雷...')\n      console.log('that', that)\n\n      // 地雷设为 -1\n      for (let i = 0; i < this.mineSize; i++) {\n        do {\n          // 生成行/列随机数 ,变量提升\n\n          /**\n           * @des 雷X坐标\n           * @type {number}\n           */\n          var mineRow = Math.floor(Math.random() * this.rowSize)\n          /**\n           * @des 雷Y坐标\n           * @type {number}\n           */\n          var mineCol = Math.floor(Math.random() * this.colSize)\n        } while (\n          //  防止与第一次点击坐标重复\n          (mineRow === row && mineCol === col) ||\n          //  防止地雷坐标重复\n          this.minesArray[mineRow][mineCol] === -1)\n\n        console.log('点击地雷随机生成的坐标', mineRow, ',', mineCol)\n        this.minesArray[mineRow][mineCol] = -1\n        console.log('vm', that)\n        that.$set(this.minesArray, mineRow, [...this.minesArray[mineRow]])\n      }\n      // 初始化数字\n      this.initNum()\n\n      console.log('初始化地雷完成...')\n      console.log('-----------------------')\n\n      this.isFirstClick = false\n    },\n\n    /**\n     * @description 初始化数字\n     */\n    initNum () {\n      console.log('初始化数字...')\n\n      console.log('x', this.minesArray.length)\n      console.log('y', this.minesArray[0].length)\n\n      /**\n       * @description X长度\n       * @type {number}\n       */\n      const borderX = this.minesArray.length\n\n      /**\n       * @description Y长度\n       * @type {number}\n       */\n      const borderY = this.minesArray[0].length\n\n      for (let row = 0; row < this.minesArray.length; row++) {\n        for (let col = 0; col < this.minesArray[row].length; col++) {\n          // 如果是雷，雷周围 8 个格子除了地雷数字加 1\n          if (this.minesArray[row][col] === -1) {\n            posArr.forEach((pos) => {\n              console.log('pos', pos)\n              const x = pos[0] + row\n              const y = pos[1] + col\n              if (x < borderX && x >= 0 && y < borderY && y >= 0) {\n                if (this.minesArray[x][y] !== -1) {\n                  this.minesArray[x][y]++\n                }\n              }\n            })\n          }\n        }\n      }\n    }\n\n  }\n\n}\n</script>\n\n<style>\n@import \"./assets/style/Index.css\";\n.main-area {\n  --cell-size: 20px;\n}\n\n.game-area {\n  margin: 10px;\n}\n\n.cell {\n  display: inline-block;\n  width: var(--cell-size);\n  height: var(--cell-size);\n  line-height: var(--cell-size);\n  border: 1px solid;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n}\n\n.row-cells {\n  font-size: 1px;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}